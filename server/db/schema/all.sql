DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS dishes CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS order_items CASCADE;
DROP TABLE IF EXISTS addresses CASCADE;
CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  full_name VARCHAR(255) NOT NULL,
  avatar TEXT,
  email VARCHAR(255) NOT NULL,
  is_vendor BOOLEAN DEFAULT FALSE NOT NULL
);
CREATE TABLE dishes (
  id SERIAL PRIMARY KEY NOT NULL,
  title VARCHAR(100) NOT NULL,
  dish_description VARCHAR(255) NOT NULL,
  price_cents INTEGER NOT NULL,
  image_link TEXT NOT NULL,
  country_style VARCHAR(255) NOT NULL,
  user_id INTEGER REFERENCES users (id) ON DELETE CASCADE
);
CREATE TABLE reviews (
  id SERIAL PRIMARY KEY NOT NULL,
  content VARCHAR(450),
  star_rating INTEGER NOT NULL,
  reviewer_id INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL,
  dish_id INTEGER REFERENCES dishes (id) ON DELETE CASCADE NOT NULL
);
CREATE TABLE orders (
  id SERIAL PRIMARY KEY NOT NULL,
  confirmed BOOLEAN DEFAULT FALSE NOT NULL,
  customer_id INTEGER REFERENCES users (id) ON DELETE CASCADE
);
CREATE TABLE order_items (
  id SERIAL PRIMARY KEY NOT NULL,
  order_id INTEGER REFERENCES orders (id) ON DELETE CASCADE NOT NULL,
  dish_id INTEGER REFERENCES dishes (id) ON DELETE CASCADE NOT NULL,
  quantity INTEGER NOT NULL,
  paid_price_cents INTEGER NOT NULL
);
CREATE TABLE addresses (
  id SERIAL PRIMARY KEY NOT NULL,
  street_name VARCHAR(255) NOT NULL,
  street_number VARCHAR(255) NOT NULL,
  city VARCHAR(255) NOT NULL,
  state_code VARCHAR(2) NOT NULL,
  country VARCHAR(50) NOT NULL,
  postal_code VARCHAR(255) NOT NULL,
  user_id INTEGER REFERENCES users (id) ON DELETE CASCADE
);
